/*! nightwatch - v1.0.0 - 2015-12-23
* Copyright (c) 2015 ; Licensed  */

!function(){"use strict";angular.module("nightwatch",["ngMaterial","ui.router"])}(),function(){"use strict";function a(a,b,c){function d(){c.html5Mode(!0),b.otherwise("/index"),a.state("index",{url:"/",views:{cluster:{templateUrl:"assets/templates/health.html",resolve:{cluster:e},controller:"HealthCtrl",controllerAs:"healthVM"},nodes:{templateUrl:"assets/templates/health.nodes.html",resolve:{nodes:g},controller:"HealthNodesCtrl",controllerAs:"healthNodesVM"}}}).state("health",{url:"/health",templateUrl:"assets/templates/health.html",resolve:{cluster:e},controller:"HealthCtrl",controllerAs:"healthVM"}).state("health.indices",{url:"/health_indices",templateUrl:"assets/templates/health.indices.html",resolve:{indices:f},controller:"HealthIndicesCtrl",controllerAs:"healthIndicesVM"}).state("health.nodes",{url:"/health_nodes",templateUrl:"assets/templates/health.nodes.html",resolve:{nodes:g},controller:"HealthNodesCtrl",controllerAs:"healthNodesVM"}).state("watch",{url:"/watch","abstract":"true",templateUrl:"assets/templates/watch.html"}).state("watch.percolators",{url:"/percolators",views:{percolator:{templateUrl:"assets/templates/watch.percolators.html",controller:"PercolatorsCtrl",controllerAs:"percolatorsVM"}}}).state("watch.watchers",{"abstract":!0,url:"/watchers",views:{watchers:{templateUrl:"assets/templates/watch.watchers.html",controller:"WatchersCtrl",controllerAs:"watchersVM"}}}).state("watch.watchers.input",{url:"/input",templateUrl:"assets/templates/watchers.input.html",resolve:{watcherInputs:h},controller:"WatcherInputCtrl",controllerAs:"watcherInputVM"}).state("watch.watchers.trigger",{url:"/trigger",templateUrl:"assets/templates/watchers.trigger.html",controller:"WatcherTriggerCtrl",controllerAs:"watcherTriggerVM"}).state("watch.watchers.conditions",{url:"/conditions",templateUrl:"assets/templates/watchers.conditions.html",controller:"WatcherConditionsCtrl",controllerAs:"watcherConditionsVM"}).state("watch.watchers.actions",{url:"/actions",templateUrl:"assets/templates/watchers.actions.html",controller:"WatcherActionsCtrl",controllerAs:"watcherActionsVM"}).state("watch.watchers.summary",{url:"/summary",templateUrl:"assets/templates/watchers.summary.html",controller:"WatcherSummaryCtrl",controllerAs:"watcherSummaryVM"}).state("query",{url:"/query",template:"<h5>Query</h5>"}).state("settings",{url:"/settings",template:"<h5>Settings</h5>"})}function e(a){return a.health().then(function(a){return a.data})}function f(a){return a.indicesHealth().then(function(a){return a.data.indices})}function g(a){return a.nodesInfo().then(function(a){return a.data.nodes})}function h(a){return a.getWatchInputs()}d(),e.$inject=["elastic"],f.$inject=["elastic"],g.$inject=["elastic"],h.$inject=["watchers"]}angular.module("nightwatch").config(a),a.$inject=["$stateProvider","$urlRouterProvider","$locationProvider"]}(),function(){"use strict";angular.module("nightwatch").constant("WatchInputType",{SIMPLE:"simple",SEARCH:"search",HTTP:"http",CHAIN:"chain"})}(),function(){"use strict";function a(a,b){function c(a){return f[a]}function d(a){return g[a]}var e=this,f={green:"thumb_up",yellow:"thumbs_up_down",red:"thumb_down"},g={green:"greenyellow",yellow:"yellow",red:"red"};e.cluster=b,e.clusterColor=d,e.clusterIcon=c}angular.module("nightwatch").controller("HealthCtrl",a),a.$inject=["$scope","cluster"]}(),function(){"use strict";function a(a,b){function c(a){return g[a]}function d(a){return h[a]}function e(a){return _.keys(f.indices)[a]}var f=this,g={green:"thumb_up",yellow:"thumbs_up_down",red:"thumb_down"},h={green:"greenyellow",yellow:"yellow",red:"red"};f.indices=b,f.clusterIcon=c,f.clusterColor=d,f.indiceName=e}angular.module("nightwatch").controller("HealthIndicesCtrl",a),a.$inject=["$scope","indices"]}(),function(){"use strict";function a(a,b){var c=this;c.nodes=b}angular.module("nightwatch").controller("HealthNodesCtrl",a),a.$inject=["$scope","nodes"]}(),function(){"use strict";function a(a){function b(){a.theme("default")}b()}angular.module("nightwatch").config(a),a.$inject=["$mdThemingProvider"]}(),function(){"use strict";function a(a){function b(){c.leftMenuOpen!=c.leftMenuOpen}var c=this;c.leftMenuOpen=!1,c.menu=b}angular.module("nightwatch").controller("NightWatchCtrl",a),a.$inject=["$scope"]}(),function(){"use strict";function a(a,b,c,d,e){function f(){c.createPercolator(i.indice,i.name,i.query).success(function(){h({_id:i.name,_source:i.query}),e.showSimple('The percolator with name "'+i.name+'" has been created!')}).error(function(){b.cancel(),e.showSimple('An error occured while creating the percolator with name "'+i.name+'"...')})}function g(){b.cancel()}function h(a){b.hide(a)}var i=this;i.indice=d.indice,i.name=null,i.query=null,i.createPercolator=f,i.cancelForm=g}angular.module("nightwatch").controller("PercolatorCreateCtrl",a),a.$inject=["$scope","$mdDialog","elastic","data","notifications"]}(),function(){"use strict";function a(a,b,c,d){function e(){return c.indiceInfo(g.indice).then(function(a){g.mappings=_.filter(_.keys(a.data[g.indice].mappings),function(a){return".percolator"!==a})})}function f(){b.cancel()}var g=this;g.indice=d.indice,g.percolator=d.percolator,g.document="",g.mappings=null,g.mapping=null,g.loadMappings=e,g.cancelForm=f}angular.module("nightwatch").controller("PercolatorMatchCtrl",a),a.$inject=["$scope","$mdDialog","elastic","data"]}(),function(){"use strict";function a(a,b,c,d){function e(){return c.indicesHealth().then(function(a){l.indices=_.keys(a.data.indices)})}function f(){return c.percolators(l.indice).then(function(a){l.percolators=a.data.hits.hits})}function g(){return!_.isNull(l.percolators)&&l.percolators.length>0}function h(a,e,f){var g=b.confirm().title("Are you sure you want to delete this percolator?").textContent('The percolator named "'+e+'" will be deleted definitively.').ariaLabel("Delete the percolator").targetEvent(a).ok("Yes, delete it").cancel("No, don't do it");b.show(g).then(function(){c.deletePercolator(l.indice,e).success(function(){d.showSimple('The percolator with name "'+e+'" has been deleted!'),l.percolators.splice(f,1)}).error(function(){d.showSimple('An error occured while deleting the percolator with name "'+e+'"...')})})}function i(a,c){b.show({controller:"PercolatorCreateCtrl",controllerAs:"percolatorsCreateVM",templateUrl:"assets/templates/percolator.dialog.html",parent:angular.element(document.body),targetEvent:a,resolve:{data:function(){return{indice:l.indice}}}}).then(function(a){l.percolators.push(a)})}function j(){b.cancel()}function k(a,c,d){b.show({controller:"PercolatorMatchCtrl",controllerAs:"percolatorMatchVM",templateUrl:"assets/templates/percolator.match.html",parent:angular.element(document.body),targetEvent:a,clickOutsideToClose:!0,resolve:{data:function(){return{indice:l.indice,percolator:d}}}})}var l=this;l.indices=null,l.indice=null,l.percolators=null,l.percolator=null,l.displayPercolators=g,l.loadIndices=e,l.loadPercolators=f,l.deletePercolator=h,l.displayForm=i,l.cancelForm=j,l.matchPercolator=k}angular.module("nightwatch").controller("PercolatorsCtrl",a),a.$inject=["$scope","$mdDialog","elastic","notifications"]}(),function(){"use strict";function a(a){function b(){return a.get("http://localhost:9200/_cluster/health")}function c(){return a.get("http://localhost:9200/_cluster/health?level=indices")}function d(){return a.get("http://localhost:9200/_nodes")}function e(b){return a.get("http://localhost:9200/"+b+"/.percolator/_search")}function f(b,c){return a["delete"]("http://localhost:9200/"+b+"/.percolator/"+c)}function g(b,c,d){return a.put("http://localhost:9200/"+b+"/.percolator/"+c,d)}function h(b){return a.get("http://localhost:9200/"+b)}return{health:b,indicesHealth:c,indiceInfo:h,nodesInfo:d,percolators:e,deletePercolator:f,createPercolator:g}}angular.module("nightwatch").factory("elastic",a),a.$inject=["$http"]}(),function(){"use strict";function a(a){function b(b){return a.show(a.simple().textContent(b).position("top right").hideDelay(3e3))}return{showSimple:b}}angular.module("nightwatch").factory("notifications",a),a.$inject=["$mdToast"]}(),function(){"use strict";function a(a){function b(a){e=a}function c(){return e}function d(){return[a.SIMPLE,a.SEARCH,a.HTTP,a.CHAIN]}var e={},f={getInputTypes:d,addWatcherInput:b,getWatchInputs:c};return f}angular.module("nightwatch").factory("watchers",a),a.$inject=["WatchInputType"]}(),function(){"use strict";function a(a,b,c){function d(){b.go("watch.watchers.conditions")}function e(){b.go("watch.watchers.summary")}var f=this;f.goToConditions=d,f.goToSummary=e}angular.module("nightwatch").controller("WatcherActionsCtrl",a),a.$inject=["$scope","$state","watchers"]}(),function(){"use strict";function a(a,b,c){function d(){b.go("watch.watchers.trigger")}function e(){b.go("watch.watchers.actions")}var f=this;f.goToTrigger=d,f.goToActions=e}angular.module("nightwatch").controller("WatcherConditionsCtrl",a),a.$inject=["$scope","$state","watchers"]}(),function(){"use strict";function a(a,b){}angular.module("nightwatch").controller("WatchersCtrl",a),a.$inject=["$scope","watchers"]}(),function(){"use strict";function a(a,b,c,d){function e(){return c.getInputTypes()}function f(){g.input[g.type]="",c.addWatcherInput(g.input),b.go("watch.watchers.trigger")}var g=this;g.input={},g.type=_.keys(d)[0]||"",g.getTypes=e,g.goToTrigger=f}angular.module("nightwatch").controller("WatcherInputCtrl",a),a.$inject=["$scope","$state","watchers","watcherInputs"]}(),function(){"use strict";function a(a,b,c){function d(){b.go("watch.watchers.actions")}function e(){console.log("check!")}var f=this;f.goToActions=d,f.saveWatcher=e}angular.module("nightwatch").controller("WatcherSummaryCtrl",a),a.$inject=["$scope","$state","watchers"]}(),function(){"use strict";function a(a,b,c){function d(){b.go("watch.watchers.input")}function e(){b.go("watch.watchers.conditions")}var f=this;f.goToInput=d,f.goToConditions=e}angular.module("nightwatch").controller("WatcherTriggerCtrl",a),a.$inject=["$scope","$state","watchers"]}();
//# sourceMappingURL=nightwatch.min.js.map