/*! nightwatch - v1.0.0 - 2015-12-25
* Copyright (c) 2015 ; Licensed  */

!function(){"use strict";angular.module("nightwatch",["ngMaterial","ui.router"])}(),function(){"use strict";function a(a,b,c){function d(){c.html5Mode(!0),b.otherwise("/index"),a.state("index",{url:"/",views:{cluster:{templateUrl:"assets/templates/health.html",resolve:{cluster:e},controller:"HealthCtrl",controllerAs:"healthVM"},nodes:{templateUrl:"assets/templates/health.nodes.html",resolve:{nodes:g},controller:"HealthNodesCtrl",controllerAs:"healthNodesVM"}}}).state("health",{url:"/health",templateUrl:"assets/templates/health.html",resolve:{cluster:e},controller:"HealthCtrl",controllerAs:"healthVM"}).state("health.indices",{url:"/health_indices",templateUrl:"assets/templates/health.indices.html",resolve:{indices:f},controller:"HealthIndicesCtrl",controllerAs:"healthIndicesVM"}).state("health.nodes",{url:"/health_nodes",templateUrl:"assets/templates/health.nodes.html",resolve:{nodes:g},controller:"HealthNodesCtrl",controllerAs:"healthNodesVM"}).state("watch",{url:"/watch","abstract":"true",templateUrl:"assets/templates/watch.html"}).state("watch.percolators",{url:"/percolators",views:{percolator:{templateUrl:"assets/templates/watch.percolators.html",controller:"PercolatorsCtrl",controllerAs:"percolatorsVM"}}}).state("watch.watchers",{"abstract":!0,url:"/watchers",views:{watchers:{templateUrl:"assets/templates/watch.watchers.html",controller:"WatchersCtrl",controllerAs:"watchersVM"}}}).state("watch.watchers.input",{url:"/input",templateUrl:"assets/templates/watchers.input.html",resolve:{watcherInputs:h},controller:"WatcherInputCtrl",controllerAs:"watcherInputVM"}).state("watch.watchers.trigger",{url:"/trigger",templateUrl:"assets/templates/watchers.trigger.html",resolve:{triggersData:i},controller:"WatcherTriggerCtrl",controllerAs:"watcherTriggerVM"}).state("watch.watchers.conditions",{url:"/conditions",templateUrl:"assets/templates/watchers.conditions.html",resolve:{conditionsData:j},controller:"WatcherConditionsCtrl",controllerAs:"watcherConditionsVM"}).state("watch.watchers.actions",{url:"/actions",templateUrl:"assets/templates/watchers.actions.html",controller:"WatcherActionsCtrl",controllerAs:"watcherActionsVM"}).state("watch.watchers.summary",{url:"/summary",templateUrl:"assets/templates/watchers.summary.html",resolve:{watcherSummary:k},controller:"WatcherSummaryCtrl",controllerAs:"watcherSummaryVM"}).state("query",{url:"/query",template:"<h5>Query</h5>"}).state("settings",{url:"/settings",template:"<h5>Settings</h5>"})}function e(a){return a.health().then(function(a){return a.data})}function f(a){return a.indicesHealth().then(function(a){return a.data.indices})}function g(a){return a.nodesInfo().then(function(a){return a.data.nodes})}function h(a){return a.getWatchInputs()}function i(a){return a.getWatchTriggers()}function j(a){return a.getWatchConditions()}function k(a){return a.getWatcherSummary()}d(),e.$inject=["elastic"],f.$inject=["elastic"],g.$inject=["elastic"],h.$inject=["watchers"],i.$inject=["watchers"],j.$inject=["watchers"],k.$inject=["watchers"]}angular.module("nightwatch").config(a),a.$inject=["$stateProvider","$urlRouterProvider","$locationProvider"]}(),function(){"use strict";angular.module("nightwatch").constant("WatchInputType",{SIMPLE:"simple",SEARCH:"search",HTTP:"http",CHAIN:"chain"}).constant("SimpleInputType",{STRING:"str",NUMERIC:"num",OBJECT:"obj"}).constant("SearchInputType",{DFS_QUERY_AND_FETCH:"dfs_query_and_fetch",DFS_QUERY_THEN_FETCH:"dfs_query_then_fetch",QUERY_AND_FETCH:"query_and_fetch",QUERY_THEN_FETCH:"query_then_fetch",SCAN:"scan"}).constant("ExpandWildCards",{ALL:"all",OPEN:"open",CLOSED:"closed",NONE:"none"}).constant("ResponseContentType",{JSON:"json",YAML:"yaml",TEXT:"text"}).constant("ScheduleTriggerTypes",{HOURLY:"hourly",DAILY:"daily",WEEKLY:"weekly",MONTHLY:"monthly",YEARLY:"yearly",CRON:"cron",INTERVAL:"interval"}).constant("ConditionTypes",{ALWAYS:"always",NEVER:"never",SCRIPT:"script",COMPARE:"compare"}).constant("ScriptConditionTypes",{INLINE:"inline",INDEXED:"id",FILE:"file"}).constant("ScriptLanguages",{GROOVY:"groovy",JAVASCRIPT:"javascript",PYTHON:"python",EXPRESSION:"expression",MUSTACHE:"mustache"}).constant("ScriptLanguages",{GROOVY:"groovy",JAVASCRIPT:"javascript",PYTHON:"python",EXPRESSION:"expression",MUSTACHE:"mustache"})}(),function(){"use strict";function a(a,b){function c(a){return f[a]}function d(a){return g[a]}var e=this,f={green:"thumb_up",yellow:"thumbs_up_down",red:"thumb_down"},g={green:"greenyellow",yellow:"yellow",red:"red"};e.cluster=b,e.clusterColor=d,e.clusterIcon=c}angular.module("nightwatch").controller("HealthCtrl",a),a.$inject=["$scope","cluster"]}(),function(){"use strict";function a(a,b){function c(a){return g[a]}function d(a){return h[a]}function e(a){return _.keys(f.indices)[a]}var f=this,g={green:"thumb_up",yellow:"thumbs_up_down",red:"thumb_down"},h={green:"greenyellow",yellow:"yellow",red:"red"};f.indices=b,f.clusterIcon=c,f.clusterColor=d,f.indiceName=e}angular.module("nightwatch").controller("HealthIndicesCtrl",a),a.$inject=["$scope","indices"]}(),function(){"use strict";function a(a,b){var c=this;c.nodes=b}angular.module("nightwatch").controller("HealthNodesCtrl",a),a.$inject=["$scope","nodes"]}(),function(){"use strict";function a(){function a(a,b,c){b.bind("keydown keypress",function(b){13===b.which&&(a.$apply(function(){a.$eval(c.ngEnter,{event:b})}),b.preventDefault())})}var b={link:a,restrict:"EA"};return b}angular.module("nightwatch").directive("ngEnter",a)}(),function(){"use strict";function a(a){function b(){a.theme("default")}b()}angular.module("nightwatch").config(a),a.$inject=["$mdThemingProvider"]}(),function(){"use strict";function a(a){function b(){c.leftMenuOpen!=c.leftMenuOpen}var c=this;c.leftMenuOpen=!1,c.menu=b}angular.module("nightwatch").controller("NightWatchCtrl",a),a.$inject=["$scope"]}(),function(){"use strict";function a(a,b,c,d,e){function f(){c.createPercolator(i.indice,i.name,i.query).success(function(){h({_id:i.name,_source:i.query}),e.showSimple('The percolator with name "'+i.name+'" has been created!')}).error(function(){b.cancel(),e.showSimple('An error occured while creating the percolator with name "'+i.name+'"...')})}function g(){b.cancel()}function h(a){b.hide(a)}var i=this;i.indice=d.indice,i.name=null,i.query=null,i.createPercolator=f,i.cancelForm=g}angular.module("nightwatch").controller("PercolatorCreateCtrl",a),a.$inject=["$scope","$mdDialog","elastic","data","notifications"]}(),function(){"use strict";function a(a,b,c,d){function e(){return c.indiceInfo(g.indice).then(function(a){g.mappings=_.filter(_.keys(a.data[g.indice].mappings),function(a){return".percolator"!==a})})}function f(){b.cancel()}var g=this;g.indice=d.indice,g.percolator=d.percolator,g.document="",g.mappings=null,g.mapping=null,g.loadMappings=e,g.cancelForm=f}angular.module("nightwatch").controller("PercolatorMatchCtrl",a),a.$inject=["$scope","$mdDialog","elastic","data"]}(),function(){"use strict";function a(a,b,c,d){function e(){return c.indicesHealth().then(function(a){l.indices=_.keys(a.data.indices)})}function f(){return c.percolators(l.indice).then(function(a){l.percolators=a.data.hits.hits})}function g(){return!_.isNull(l.percolators)&&l.percolators.length>0}function h(a,e,f){var g=b.confirm().title("Are you sure you want to delete this percolator?").textContent('The percolator named "'+e+'" will be deleted definitively.').ariaLabel("Delete the percolator").targetEvent(a).ok("Yes, delete it").cancel("No, don't do it");b.show(g).then(function(){c.deletePercolator(l.indice,e).success(function(){d.showSimple('The percolator with name "'+e+'" has been deleted!'),l.percolators.splice(f,1)}).error(function(){d.showSimple('An error occured while deleting the percolator with name "'+e+'"...')})})}function i(a,c){b.show({controller:"PercolatorCreateCtrl",controllerAs:"percolatorsCreateVM",templateUrl:"assets/templates/percolator.dialog.html",parent:angular.element(document.body),targetEvent:a,resolve:{data:function(){return{indice:l.indice}}}}).then(function(a){l.percolators.push(a)})}function j(){b.cancel()}function k(a,c,d){b.show({controller:"PercolatorMatchCtrl",controllerAs:"percolatorMatchVM",templateUrl:"assets/templates/percolator.match.html",parent:angular.element(document.body),targetEvent:a,clickOutsideToClose:!0,resolve:{data:function(){return{indice:l.indice,percolator:d}}}})}var l=this;l.indices=null,l.indice=null,l.percolators=null,l.percolator=null,l.displayPercolators=g,l.loadIndices=e,l.loadPercolators=f,l.deletePercolator=h,l.displayForm=i,l.cancelForm=j,l.matchPercolator=k}angular.module("nightwatch").controller("PercolatorsCtrl",a),a.$inject=["$scope","$mdDialog","elastic","notifications"]}(),function(){"use strict";function a(a){function b(){return a.get("http://localhost:9200/_cluster/health")}function c(){return a.get("http://localhost:9200/_cluster/health?level=indices")}function d(){return a.get("http://localhost:9200/_nodes")}function e(b){return a.get("http://localhost:9200/"+b+"/.percolator/_search")}function f(b,c){return a["delete"]("http://localhost:9200/"+b+"/.percolator/"+c)}function g(b,c,d){return a.put("http://localhost:9200/"+b+"/.percolator/"+c,d)}function h(b){return a.get("http://localhost:9200/"+b)}return{health:b,indicesHealth:c,indiceInfo:h,nodesInfo:d,percolators:e,deletePercolator:f,createPercolator:g}}angular.module("nightwatch").factory("elastic",a),a.$inject=["$http"]}(),function(){"use strict";function a(a){function b(b){return a.show(a.simple().textContent(b).position("top right").hideDelay(3e3))}return{showSimple:b}}angular.module("nightwatch").factory("notifications",a),a.$inject=["$mdToast"]}(),function(){"use strict";function a(a,b,c,d,e,f,g,h,i){function j(b){C[a.SIMPLE]=b}function k(b){C[a.SEARCH]=b}function l(b){C[a.HTTP]=b}function m(a){D=a}function n(a){E=a}function o(){return C}function p(){return D}function q(){return E}function r(){return[a.SIMPLE,a.SEARCH,a.HTTP]}function s(){var a={};return a.input=C,a.trigger=D,a.condition=E,a}function t(){return[b.STRING,b.NUMERIC,b.OBJECT]}function u(){return[c.DFS_QUERY_AND_FETCH,c.DFS_QUERY_THEN_FETCH,c.QUERY_AND_FETCH,c.QUERY_THEN_FETCH,c.SCAN]}function v(){return[d.ALL,d.OPEN,d.CLOSED,d.NONE]}function w(){return[e.JSON,e.YAML,e.TEXT]}function x(){return[f.HOURLY,f.DAILY,f.WEEKLY,f.MONTHLY,f.YEARLY,f.CRON,f.INTERVAL]}function y(){return[g.ALWAYS,g.NEVER,g.SCRIPT,g.COMPARE]}function z(){return[h.INLINE,h.INDEXED,h.FILE]}function A(){return[i.GROOVY,i.JAVASCRIPT,i.PYTHON,i.EXPRESSION,i.MUSTACHE]}function B(a){return _.map(a.trim().split(","),function(a){return a.trim()})}var C={},D={},E={},F={getInputTypes:r,setSimpleWatcherInput:j,setSearchWatcherInput:k,setHttpWatcherInput:l,setWatcherScheduleTrigger:m,setWatcherCondition:n,getWatchInputs:o,getWatchTriggers:p,getWatchConditions:q,getWatcherSummary:s,getSimpleInputTypes:t,getSearchRequestTypes:u,getExpandWildCards:v,getResponseContentTypes:w,getScheduleTriggerTypes:x,getConditionTypes:y,getScriptTypes:z,getScriptLanguages:A,transformToArray:B};return F}angular.module("nightwatch").factory("watchers",a),a.$inject=["WatchInputType","SimpleInputType","SearchInputType","ExpandWildCards","ResponseContentType","ScheduleTriggerTypes","ConditionTypes","ScriptConditionTypes","ScriptLanguages"]}(),function(){"use strict";function a(a,b,c){function d(){b.go("watch.watchers.conditions")}function e(){b.go("watch.watchers.summary")}var f=this;f.goToConditions=d,f.goToSummary=e}angular.module("nightwatch").controller("WatcherActionsCtrl",a),a.$inject=["$scope","$state","watchers"]}(),function(){"use strict";function a(a,b,c,d){function e(){c.setWatcherCondition(p.condition),b.go("watch.watchers.trigger")}function f(){c.setWatcherCondition(p.condition),b.go("watch.watchers.actions")}function g(){return c.getConditionTypes()}function h(){return c.getScriptTypes()}function i(){return c.getScriptLanguages()}function j(){p.condition={},p.condition[p.type]={}}function k(){p.condition.script={},p.condition.script[p.scriptType]=""}function l(a,b){var c=p.condition.params||{};c[a]=b,p.condition.params=c}function m(a){var b={};angular.forEach(_.keys(p.condition.params),function(c){c!==a&&(b[c]=p.condition.params[c])}),p.condition.params=b}function n(){return _.keys(p.condition.params)}function o(a){_.isEmpty(_.keys(a))||(p.condition=a,"script"===p.type&&(_.isUndefined(a.script.inline)?_.isUndefined(a.script.file)?_.isUndefined(a.script.id)||(p.scriptType="id"):p.scriptType="file":p.scriptType="inline"))}var p=this;p.type=_.keys(d)[0]||"",p.scriptType="",p.condition={},p.goToTrigger=e,p.goToActions=f,p.getConditionTypes=g,p.getScriptTypes=h,p.getScriptLanguages=i,p.updateType=j,p.updateScriptType=k,p.addParameter=l,p.removeParameter=m,p.getParameters=n,o(d)}angular.module("nightwatch").controller("WatcherConditionsCtrl",a),a.$inject=["$scope","$state","watchers","conditionsData"]}(),function(){"use strict";function a(a,b){}angular.module("nightwatch").controller("WatchersCtrl",a),a.$inject=["$scope","watchers"]}(),function(){"use strict";function a(a,b,c,d,e){function f(){b.go("watch.watchers.trigger")}function g(){return c.getSearchRequestTypes()}function h(){return c.getInputTypes()}function i(){return c.getSimpleInputTypes()}function j(a,b){var e=r.input.simple||{};e[a]="obj"===a?angular.fromJson(b):b,r.input.simple=e,c.setSimpleWatcherInput(r.input),d.showSimple("The simple input type has been saved")}function k(){return angular.toJson(r.input,!0)}function l(){return _.size(r.input)>0}function m(){return c.getExpandWildCards()}function n(){return c.getResponseContentTypes()}function o(a,b,e){var f=a||{};_.contains(_.keys(f),"indices")&&(f.indices=q(f.indices)),_.contains(_.keys(f),"types")&&(f.types=q(f.types)),_.contains(_.keys(f),"body")&&(f.body=angular.fromJson(f.body)),_.contains(_.keys(f),"template")&&(f.template=angular.fromJson(f.template)),r.input.search={request:f},_.isUndefined(b)||(r.input.search.extract=b),_.isUndefined(e)||(r.input.search.timeout=e),c.setSearchWatcherInput(r.input.search),d.showSimple("The search input type has been saved")}function p(a,b,e){var f=a||{};r.input.http={request:f},_.isUndefined(b)||(r.input.http.extract=b),_.isUndefined(e)||(r.input.http.responseContentType=e),c.setHttpWatcherInput(r.input.http),d.showSimple("The HTTP input type has been saved")}function q(a){return _.map(a.trim().split(","),function(a){return a.trim()})}var r=this;r.input={},r.type="",r.request={},r.goToTrigger=f,r.getPrettyInput=k,r.hasInput=l,r.getSearchRequestTypes=g,r.getTypes=h,r.getSimpleTypes=i,r.getExpandWildCards=m,r.getResponseTypes=n,r.addSimpleInputType=j,r.addSearchInputType=o,r.addHttpInputType=p}angular.module("nightwatch").controller("WatcherInputCtrl",a),a.$inject=["$scope","$state","watchers","notifications","watcherInputs"]}(),function(){"use strict";function a(a,b,c,d){function e(){b.go("watch.watchers.actions")}function f(){console.log("summary: "+angular.toJson(g.summary))}var g=this;g.summary=d,g.goToActions=e,g.saveWatcher=f}angular.module("nightwatch").controller("WatcherSummaryCtrl",a),a.$inject=["$scope","$state","watchers","watcherSummary"]}(),function(){"use strict";function a(a,b,c,d,e){function f(){b.go("watch.watchers.input")}function g(){r.saveTrigger(),b.go("watch.watchers.conditions")}function h(){r.type===d.HOURLY?r.schedule.hourly=r.hours:r.type===d.DAILY?r.dailyTimes?r.schedule.daily={at:r.dailyData.times}:r.schedule.daily={at:{hour:r.dailyData.hours,minute:r.dailyData.minutes}}:r.type===d.WEEKLY?r.schedule.weekly=i(r.weeklyData):r.type===d.MONTHLY?r.schedule.monthly=j(r.monthlyData):r.type===d.YEARLY&&(r.schedule.yearly=k(r.yearlyData)),c.setWatcherScheduleTrigger(r.schedule)}function i(a){return r.weeklyTimes?_.map(r.weeklyData.times,function(a){var b=a.split("@");return{on:b[0],at:b[1]}}):{on:a.days,at:a.hours}}function j(a){return r.monthlyTimes?_.map(r.monthlyData.times,function(a){var b=a.split("@");return{on:b[0],at:b[1]}}):{on:a.days,at:a.hours}}function k(a){return r.yearlyTimes?_.map(r.yearlyData.times,function(a){var b=a.split("@");return{"in":b[0].substring(0,b[0].length-2),on:b[0].substring(b[0].length-2),at:b[1]}}):{"in":a.months,on:a.days,at:a.hours}}function l(){return c.getScheduleTriggerTypes()}function m(a){if(!_.isEmpty(_.keys(a))){var b=_.keys(a)[0];b===d.HOURLY?r.hours=a.hourly:b===d.DAILY?n(a.daily.at):b===d.WEEKLY?o(a.weekly):b===d.MONTHLY?p(a.monthly):b===d.YEARLY&&q(a.yearly)}}function n(a){r.dailyTimes=_.isArray(a),r.dailyTimes?r.dailyData={times:a,hours:[],minutes:[]}:r.dailyData={times:[],hours:a.hour,minutes:a.minute}}function o(a){r.weeklyTimes=_.isArray(a),r.weeklyTimes?r.weeklyData.times=_.map(a,function(a){return a.on+"@"+a.at}):(r.weeklyData.days=a.on,r.weeklyData.hours=a.at)}function p(a){r.monthlyTimes=_.isArray(a),r.monthlyTimes?r.monthlyData.times=_.map(a,function(a){return a.on+"@"+a.at}):(r.monthlyData.days=a.on,r.monthlyData.hours=a.at)}function q(a){r.yearlyTimes=_.isArray(a),r.yearlyTimes?r.yearlyData.times=_.map(a,function(a){return a["in"]+a.on+"@"+a.at}):(r.yearlyData.months=a["in"],r.yearlyData.days=a.on,r.yearlyData.hours=a.at)}var r=this;r.type=_.keys(e)[0]||"",r.schedule={},r.hours=[],r.dailyData={times:[],hours:[],minutes:[]},r.dailyTimes=r.weeklyTimes=r.monthlyTimes=r.yearlyTimes=!0,r.weeklyData={times:[],days:[],hours:[]},r.monthlyData={times:[],days:[],hours:[]},r.yearlyData={times:[],months:[],days:[],hours:[]},r.goToInput=f,r.goToConditions=g,r.saveTrigger=h,r.getTriggerTypes=l,m(e)}angular.module("nightwatch").controller("WatcherTriggerCtrl",a),a.$inject=["$scope","$state","watchers","ScheduleTriggerTypes","triggersData"]}();
//# sourceMappingURL=nightwatch.min.js.map